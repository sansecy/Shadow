// Top-level build file where you can add configuration options common to all sub-projects/modules.

//buildscript不能从其他gradle文件中apply，所以这段buildscript脚本存在于多个子构建中。
//请更新buildscript时同步更新。
buildscript {
    loadVersions:
    {// 读取versions.properties到ext中，供项目中直接用变量引用版本号
        def versions_properties_path = 'buildScripts/gradle/versions.properties'
        def versions = new Properties()
        versions.load(file(versions_properties_path).newReader())
        versions.forEach { key, value ->
            ext.set(key, value)
        }
    }
    repositories {
        if (!System.getenv().containsKey("DISABLE_TENCENT_MAVEN_MIRROR")) {
            maven { url 'https://mirrors.tencent.com/nexus/repository/maven-public/' }
        } else {
            google()
            mavenCentral()
        }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:$build_gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.tencent.shadow.coding:aar-to-jar-plugin'
        classpath 'com.tencent.shadow.coding:common-jar-settings'
//        classpath "com.didi.virtualapk:gradle"
    }

    configurations.all {
        resolutionStrategy.cacheDynamicVersionsFor 1, 'minutes' // 动态版本
        resolutionStrategy.cacheChangingModulesFor 1, 'minutes' // 变化模块
        // 统一support依赖包
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.1.1'
//                    details.useVersion '27.1.1'
                }
            }
        }
    }
}
apply from: 'buildScripts/gradle/common.gradle'

apply from: "buildScripts/gradle/maven.gradle"
