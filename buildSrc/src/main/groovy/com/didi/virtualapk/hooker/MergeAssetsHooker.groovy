package com.didi.virtualapk.hooker

import com.android.build.gradle.AppExtension
import com.android.build.gradle.api.ApkVariant
import com.android.build.gradle.tasks.MergeSourceSetFolders
import com.android.utils.StringHelper
import com.didi.virtualapk.collector.dependence.AarDependenceInfo
import groovy.io.FileType
import org.gradle.api.Project

/**
 * Remove the asset directory included in the excluded library before mergeAssets task
 *
 * @author zhengtao
 */
class MergeAssetsHooker extends GradleTaskHooker<MergeSourceSetFolders> {
    AppExtension androidConfig

    public MergeAssetsHooker(Project project, ApkVariant apkVariant) {
        super(project, apkVariant)
        androidConfig = project.extensions.findByType(AppExtension)
    }

    @Override
    String getTaskName() {
        return StringHelper.appendCapitalized("merge", apkVariant.name, "Assets")
    }

    /**
     * Remove the element(AssetSet) generated by the stripped dependenceInfos in the task inputDirectorySets
     * @param mergeAssetsTask Gradle task of mergeAssets
     */
    @Override
    void collectAndStripAssets(MergeSourceSetFolders mergeAssetsTask) {
        println "MergeAssetsHooker.collectAndStripAssets"
        def list = new ArrayList<String>()
        //收集需要去除的资源
        vaContext.getStripDependencies(virtualApk.buildingVariantKey).each {
            if (it instanceof AarDependenceInfo) {
                def dir = it.assetsFolder
                if (dir.exists()) {
                    dir.eachFileRecurse(FileType.FILES) { file ->
                        list << file.path.replace(dir.path, "")
                    }
                }
            }
        }
        ///mergeAssetsTask.getOutputDir().get().asFile = Users/sansecy/Downloads/shanpao/shanpao_tv/plugin/build/intermediates/merged_assets/jxSpOnlineBaseNoaiDebug/out
        def dirParent = mergeAssetsTask.getOutputDir().get().asFile
        //去除资源
        list.each {
            def file = new File(dirParent.path + it)
            project.delete(file)
        }
    }

    @Override
    void afterTaskExecute(MergeSourceSetFolders task) {
    }
}